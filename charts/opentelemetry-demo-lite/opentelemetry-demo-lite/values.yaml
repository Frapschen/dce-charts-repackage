global:
  opentelemetryDemo:
    image:
      registry: ghcr.m.daocloud.io
      repository: openinsight-proj/demo
    busyboxImage:
      registry: docker.m.daocloud.io
      repository: library/busybox
      tag: "1.34.1"
    istioSidecar:
      enabled: false
  observability:
    adServiceJVMEnable: true
  microservices:
    nacos:
      enabled: false
      registryName: "nacos"
      registryEndpoint: "nacos:8848"
      registryNamespace: ""
      registryServiceGroup: "DEFAULT_GROUP"
      registryInstanceGroup: "DEFAULT"
      username: ""
      password: ""
    sentinel:
      enabled: false
      endpoint: "sentinel:8080"

  middleware:
    redis:
      # enum: builtin or redisCR
      deployBy: "builtin"

# child values
opentelemetry-demo-lite:
  extensions:
    springCloudGateway:
      enabled: false
      image:
        registry: ghcr.m.daocloud.io
        repository: openinsight-proj/demo
        tag: "b0dba6b89cf0fa7c8f5281451cfbfff3e1cc6a19-spring-cloud-gateway"
      service:
        type: NodePort
    mysql:
      # this value is not in used, it replaces by global.microservices.nacos.enabled
      enabled: true
      image:
        registry: docker.m.daocloud.io
        repository: library/mysql
        tag: "8.0"
    redis:
      redisCRResource:
        redisExporterImage:
          registry: docker.m.daocloud.io
          repository: oliver006/redis_exporter
          tag: "v1.45.0"
        image:
          registry: ghcr.m.daocloud.io
          repository: ksmartdata/ot-redis
          tag: "v6.2.12-alpine"
      image:
        registry: ghcr.m.daocloud.io
        repository: ksmartdata/ot-redis
        tag: "v6.2.12-alpine"
    dataservice:
      # this value is not in used, it replaces by global.microservices.nacos.enabled
      enabled: true
      image:
        registry: ghcr.m.daocloud.io
        repository: openinsight-proj/demo
        tag: "db802043e29ceb4205af968a6d6f324c8929d543-dataservice"
        pullPolicy: Always
      servcie:
        type: ClusterIP
      ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: health-http
          containerPort: 8999
          protocol: TCP
      env:
        - name: OTEL_SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: "metadata.labels['app.kubernetes.io/name']"
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES_POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"
    cartservice:
      enabled: true
      image:
        registry: ghcr.m.daocloud.io
        repository: openinsight-proj/demo
        tag: "v1.3.2-cartservice"
      busyboxImage:
        registry: docker.m.daocloud.io
        repository: library/busybox
        tag: "1.34.1"
    adservice:
      enabled: true
      image:
        registry: ghcr.m.daocloud.io
        repository: openinsight-proj/demo
        tag: "db802043e29ceb4205af968a6d6f324c8929d543-adservice-v2"
        pullPolicy: Always
      servcie:
        type: ClusterIP
      ports:
        - name: grpc
          containerPort: 8080
          protocol: TCP
        - name: http
          containerPort: 8081
          protocol: TCP
        - name: jmx-metrics
          containerPort: 12345
          protocol: TCP
        - name: custom-metrics
          containerPort: 8888
          protocol: TCP
        - name: jvm-metrics
          containerPort: 9464
          protocol: TCP
      env:
        - name: OTEL_SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: "metadata.labels['app.kubernetes.io/name']"
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES_POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: AD_SERVICE_PORT
          value: "8080"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"
        insight.opentelemetry.io/metric-scrape: "true"
        insight.opentelemetry.io/metric-path: "/"
        insight.opentelemetry.io/metric-port: "12345"
  opentelemetry-demo:
    enabled: true